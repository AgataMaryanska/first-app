{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agata\\\\Desktop\\\\4 Kurs\\\\Projekt 5\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from \"./context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agata/Desktop/4 Kurs/Projekt 5/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","loginHandler","email","password","localStorage","setItem","setIsLoggedIn","logoutHandler","removeItem","isLoggedIn","onLogout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAIX,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC;AACA;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AACxBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,YAAxB;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,sBACQ,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,UAAU,EAAEA,UADT;AAEHC,MAAAA,QAAQ,EAAEH;AAFP,KADX;AAAA,4BAMA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAA,iBACK,CAACE,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,cADpB,EAEKQ,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAcH;;KA9BQP,G;AAgCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from \"./context/auth-context\";\n\nfunction App() {\n\n   \n\n    const loginHandler = (email, password) => {\n        // We should of course check email and password\n        // But it's just a dummy/ demo anyways\n        localStorage.setItem('isLoggedIn', '1');\n        setIsLoggedIn(true);\n    };\n\n    const logoutHandler = () => {\n        localStorage.removeItem('isLoggedIn');\n        setIsLoggedIn(false);\n    };\n\n    return (\n            <AuthContext.Provider\n                value={{\n                    isLoggedIn: isLoggedIn,\n                    onLogout: logoutHandler\n                }}\n            >\n            <MainHeader />\n            <main>\n                {!isLoggedIn && <Login onLogin={loginHandler}/>}\n                {isLoggedIn && <Home onLogout={logoutHandler}/>}\n            </main>\n            </AuthContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}